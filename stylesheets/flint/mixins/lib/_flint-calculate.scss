// Outputs calculated styles
// -------------------------------------------------------------------------------
// @param $width [integer] : width
// @param $margin-right [integer] : right margin
// @param $margin-left [integer] : left margin
// -------------------------------------------------------------------------------
// @output outputs styles

@mixin outputFlint ($width, $margin-right, $margin-left) {
	width: $width;
	margin-right: $margin-right;
	margin-left: $margin-left;
	@content;
}

// Calculate widths, save all variables to instance
// -------------------------------------------------------------------------------
// @param $calcKey [string] : breakpoint key
// @param $calcSpan [integer] : span value
// @param $calcContext [integer] : context value
// @param $calcGutter [integer] : gutter value
// @param $calcShift [integer] : shift value
// @param $i [integer] : index if variable length is > 1
// -------------------------------------------------------------------------------
// @output calculated styles

@mixin calcFlint ($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $i: null) {

	@if $i != null {

		@if length($calcKey) > 1 {
			$calcKey: nth($calcKey, $i);
		}
		@if length($calcSpan) > 1 {
			$calcSpan: nth($calcSpan, $i);
		}
		@if length($calcContext) > 1 {
			$calcContext: nth($calcContext, $i);
		}
		@if length($calcGutter) > 1 {
			$calcGutter: nth($calcGutter, $i);
		}
		@if length($calcShift) > 1 {
			$calcShift: nth($calcShift, $i);
		}

	}

	// Hide if span is zero
	@if $calcSpan == 0 {

		$outputWidth: 0;
		$outputMarginRight: 0;
		$outputMarginLeft: 0;

		// First check if it's the default, so we don't hide the element on all breakpoints
		@if $calcKey == get-value("settings", "default") {
			@include _($calcKey) {
				display: none;
			}
		} @else {
			display: none;
		}

		@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
		@include debugPrintInstance($calcKey);

	} @else {

		@if $calcShift != null and $calcContext == null {

			@if $calcGutter == null or $calcGutter == "normal" or $calcGutter == "default" or $calcGutter == "regular" and get-value("settings", "gutter") != false {

				// Save to variables for instance creation
				$outputWidth: (calc-width($calcKey, $calcSpan)) - ((calc-margin($calcKey, $calcSpan))*2);
				$outputMarginRight: calc-margin($calcKey, $calcSpan);
				$outputMarginLeft: ( if( $calcShift > 0, 
					(calc-margin($calcKey, $calcSpan)) + (calc-width($calcKey, $calcShift)),
					(calc-margin($calcKey, -$calcSpan)) + (calc-width($calcKey, $calcShift)) 
				));

				// Output styles
				@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
					@content;
				}

				// Create new instance for memoization
				@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);

				// If debug mode, print instance
				@include debugPrintInstance($calcKey);

			} @else if $calcGutter == "inside" and get-value("settings", "gutter") != false {

				$outputWidth: (calc-width($calcKey, $calcSpan)) - ((calc-margin($calcKey, $calcSpan))*4);
				$outputMarginRight: calc-margin($calcKey, $calcSpan);
				$outputMarginLeft: ( if( $calcShift > 0, 
					(calc-margin($calcKey, $calcSpan)) + (calc-width($calcKey, $calcShift)),
					(calc-margin($calcKey, -$calcSpan)) + (calc-width($calcKey, $calcShift)) 
				));

				@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
					@content;
				}

				@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
				@include debugPrintInstance($calcKey);

			} @else if $calcGutter == "alpha" or $calcGutter == "no-left" or $calcGutter == "first" and get-value("settings", "gutter") != false {

				$outputWidth: (calc-width($calcKey, $calcSpan)) - (calc-margin($calcKey, $calcSpan));
				$outputMarginRight: calc-margin($calcKey, $calcSpan);
				$outputMarginLeft: ( if( $calcShift > 0, 
					calc-width($calcKey, $calcShift),
					calc-width($calcKey, $calcShift)
				));

				@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
					@content;
				}

				@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
				@include debugPrintInstance($calcKey);

			} @else if $calcGutter == "omega" or $calcGutter == "no-right" or $calcGutter == "last" and get-value("settings", "gutter") != false {

				$outputWidth: (calc-width($calcKey, $calcSpan)) - ((calc-margin($calcKey, $calcSpan)));
				$outputMarginRight: 0;
				$outputMarginLeft: ( if( $calcShift > 0, 
					(calc-margin($calcKey, $calcSpan)) + (calc-width($calcKey, $calcShift)),
					(calc-margin($calcKey, -$calcSpan)) + (calc-width($calcKey, $calcShift)) 
				));

				@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
					@content;
				}

				@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
				@include debugPrintInstance($calcKey);

			} @else if $calcGutter == "row" or $calcGutter == "none" or get-value("settings", "gutter") == false {

				$outputWidth: (calc-width($calcKey, $calcSpan));
				$outputMarginRight: 0;
				$outputMarginLeft: ( if( $calcShift > 0, 
					calc-width($calcKey, $calcShift),
					calc-width($calcKey, $calcShift)
				));

				@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
					@content;
				}

				@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
				@include debugPrintInstance($calcKey);
			}

		} @else if $calcContext != null {
			// Check if parent instance exists
			$exists: get-family-instance($calcKey);

			@if $calcShift != null {
				@if $calcGutter == null or $calcGutter == "normal" or $calcGutter == "default" or $calcGutter == "regular" and get-value("settings", "gutter") != false {
					// Check if context is set to auto
					@if $calcContext == "auto" {
						// Does parent exist?
						@if $exists != false {
							@if get-value("settings", "grid") == "fluid" {

								$outputWidth: (calc-width($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")))) - ((calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span"))))*2);
								$outputMarginRight: calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")));
								$outputMarginLeft: ( if( $calcShift > 0, 
									(calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")))) + (calc-width($calcKey, $calcShift, to-number(get-instance-value($calcKey, "span")))),
									(calc-margin($calcKey, -$calcSpan, to-number(get-instance-value($calcKey, "span")))) + (calc-width($calcKey, $calcShift, to-number(get-instance-value($calcKey, "span")))) 
								));

								@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
									@content;
								}

								@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
								@include debugPrintInstance($calcKey);

							} @else if get-value("settings", "grid") == "fixed" {
								// Get parent width instead of parent span for fixed grids
								$outputWidth: (to-number(get-instance-value($calcKey, "output", "width")) / to-number(get-instance-value($calcKey, "span")) * $calcSpan) - ((calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span"))))*2);
								$outputMarginRight: calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")));
								$outputMarginLeft: ( if( $calcShift > 0, 
									(calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")))) + (calc-width($calcKey, $calcShift, to-number(get-instance-value($calcKey, "span")))),
									(calc-margin($calcKey, -$calcSpan, to-number(get-instance-value($calcKey, "span")))) + (calc-width($calcKey, $calcShift, to-number(get-instance-value($calcKey, "span")))) 
								));

								@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
									@content;
								}

								@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
								@include debugPrintInstance($calcKey);

							}
						} @else {
							// Else warn that context should not be set to `auto`
							@warn "You set context to `#{$calcContext}`, but a parent instance could not be found for `#{selector_string()}`";
						}
					// Output styles normally if not set to auto
					} @else {

						$outputWidth: (calc-width($calcKey, $calcSpan, $calcContext)) - ((calc-margin($calcKey, $calcSpan, $calcContext))*2);
						$outputMarginRight: calc-margin($calcKey, $calcSpan, $calcContext);
						$outputMarginLeft: ( if( $calcShift > 0, 
							(calc-margin($calcKey, $calcSpan, $calcContext)) + (calc-width($calcKey, $calcShift, $calcContext)),
							(calc-margin($calcKey, -$calcSpan, $calcContext)) + (calc-width($calcKey, $calcShift, $calcContext)) 
						));

						@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
							@content;
						}

						@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
						@include debugPrintInstance($calcKey);
					}

				} @else if $calcGutter == "inside" and get-value("settings", "gutter") != false {

					@if $calcContext == "auto" {
						@if $exists != false {
							@if get-value("settings", "grid") == "fluid" {

								$outputWidth: (calc-width($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")))) - ((calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span"))))*4);
								$outputMarginRight: calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")));
								$outputMarginLeft: ( if( $calcShift > 0, 
									(calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")))) + (calc-width($calcKey, $calcShift, to-number(get-instance-value($calcKey, "span")))),
									(calc-margin($calcKey, -$calcSpan, to-number(get-instance-value($calcKey, "span")))) + (calc-width($calcKey, $calcShift, to-number(get-instance-value($calcKey, "span")))) 
								));

								@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
									@content;
								}

								@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
								@include debugPrintInstance($calcKey);

							} @else if get-value("settings", "grid") == "fixed" {

								$outputWidth: (to-number(get-instance-value($calcKey, "output", "width")) / to-number(get-instance-value($calcKey, "span")) * $calcSpan) - ((calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span"))))*4);
								$outputMarginRight: calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")));
								$outputMarginLeft: ( if( $calcShift > 0, 
									(calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")))) + (calc-width($calcKey, $calcShift, to-number(get-instance-value($calcKey, "span")))),
									(calc-margin($calcKey, -$calcSpan, to-number(get-instance-value($calcKey, "span")))) + (calc-width($calcKey, $calcShift, to-number(get-instance-value($calcKey, "span")))) 
								));

								@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
									@content;
								}

								@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
								@include debugPrintInstance($calcKey);

							}
						} @else {
							// Else warn that context should not be set to `auto`
							@warn "You set context to `#{$calcContext}`, but a parent instance could not be found for `#{selector_string()}`";
						}
						// Output styles normally if not set to auto
					} @else {

						$outputWidth: (calc-width($calcKey, $calcSpan, $calcContext)) - ((calc-margin($calcKey, $calcSpan, $calcContext))*2);
						$outputMarginRight: calc-margin($calcKey, $calcSpan, $calcContext);
						$outputMarginLeft: ( if( $calcShift > 0, 
							(calc-margin($calcKey, $calcSpan, $calcContext)) + (calc-width($calcKey, $calcShift, $calcContext)),
							(calc-margin($calcKey, -$calcSpan, $calcContext)) + (calc-width($calcKey, $calcShift, $calcContext)) 
						));

						@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
							@content;
						}

						@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
						@include debugPrintInstance($calcKey);
					}

				} @else if $calcGutter == "alpha" or $calcGutter == "no-left" or $calcGutter == "first" and get-value("settings", "gutter") != false {

					@if $calcContext == "auto" {
						@if $exists != false {
							@if get-value("settings", "grid") == "fluid" {

								$outputWidth: (calc-width($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")))) - (calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span"))));
								$outputMarginRight: calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")));
								$outputMarginLeft: ( if( $calcShift > 0, 
									calc-width($calcKey, $calcShift, to-number(get-instance-value($calcKey, "span"))),
									calc-width($calcKey, $calcShift, to-number(get-instance-value($calcKey, "span")))
								));

								@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
									@content;
								}

								@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
								@include debugPrintInstance($calcKey);

							} @else if get-value("settings", "grid") == "fixed" {

								$outputWidth: (to-number(get-instance-value($calcKey, "output", "width")) / to-number(get-instance-value($calcKey, "span")) * $calcSpan) - ((calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")))));
								$outputMarginRight: calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")));
								$outputMarginLeft: ( if( $calcShift > 0, 
									calc-width($calcKey, $calcShift, to-number(get-instance-value($calcKey, "span"))),
									calc-width($calcKey, $calcShift, to-number(get-instance-value($calcKey, "span")))
								));

								@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
									@content;
								}

								@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
								@include debugPrintInstance($calcKey);

							}
						} @else {
							@warn "You set context to `#{$calcContext}`, but a parent instance could not be found for `#{selector_string()}`";
						}
					} @else {

						$outputWidth: (calc-width($calcKey, $calcSpan, $calcContext)) - (calc-margin($calcKey, $calcSpan, $calcContext));
						$outputMarginRight: calc-margin($calcKey, $calcSpan, $calcContext);
						$outputMarginLeft: ( if( $calcShift > 0, 
							calc-width($calcKey, $calcShift, $calcContext),
							calc-width($calcKey, $calcShift, $calcContext)
						));

						@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
							@content;
						}

						@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
						@include debugPrintInstance($calcKey);
					}

				} @else if $calcGutter == "omega" or $calcGutter == "no-right" or $calcGutter == "last" and get-value("settings", "gutter") != false {

					@if $calcContext == "auto" {
						@if $exists != false {
							@if get-value("settings", "grid") == "fluid" {

								$outputWidth: (calc-width($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")))) - ((calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")))));
								$outputMarginRight: 0;
								$outputMarginLeft: ( if( $calcShift > 0, 
									(calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")))) + (calc-width($calcKey, $calcShift, to-number(get-instance-value($calcKey, "span")))),
									(calc-margin($calcKey, -$calcSpan, to-number(get-instance-value($calcKey, "span")))) + (calc-width($calcKey, $calcShift, to-number(get-instance-value($calcKey, "span")))) 
								));

								@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
									@content;
								}

								@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
								@include debugPrintInstance($calcKey);

							} @else if get-value("settings", "grid") == "fixed" {

								$outputWidth: (to-number(get-instance-value($calcKey, "output", "width")) / to-number(get-instance-value($calcKey, "span")) * $calcSpan) - ((calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")))));
								$outputMarginRight: 0;
								$outputMarginLeft: ( if( $calcShift > 0, 
									(calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")))) + (calc-width($calcKey, $calcShift, to-number(get-instance-value($calcKey, "span")))),
									(calc-margin($calcKey, -$calcSpan, to-number(get-instance-value($calcKey, "span")))) + (calc-width($calcKey, $calcShift, to-number(get-instance-value($calcKey, "span")))) 
								));

								@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
									@content;
								}

								@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
								@include debugPrintInstance($calcKey);

							}
						} @else {
							@warn "You set context to `#{$calcContext}`, but a parent instance could not be found for `#{selector_string()}`";
						}
					} @else {

						$outputWidth: (calc-width($calcKey, $calcSpan, $calcContext)) - ((calc-margin($calcKey, $calcSpan, $calcContext)));
						$outputMarginRight: 0;
						$outputMarginLeft: ( if( $calcShift > 0, 
							(calc-margin($calcKey, $calcSpan, $calcContext)) + (calc-width($calcKey, $calcShift, $calcContext)),
							(calc-margin($calcKey, -$calcSpan, $calcContext)) + (calc-width($calcKey, $calcShift, $calcContext)) 
						));

						@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
							@content;
						}

						@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
						@include debugPrintInstance($calcKey);
					}

				} @else if $calcGutter == "row" or $calcGutter == "none" or get-value("settings", "gutter") == false {

					@if $calcContext == "auto" {
						@if $exists != false {
							@if get-value("settings", "grid") == "fluid" {

								$outputWidth: (calc-width($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span"))));
								$outputMarginRight: 0;
								$outputMarginLeft: ( if( $calcShift > 0, 
									calc-width($calcKey, $calcShift, to-number(get-instance-value($calcKey, "span"))),
									calc-width($calcKey, $calcShift, to-number(get-instance-value($calcKey, "span")))
								));

								@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
									@content;
								}

								@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
								@include debugPrintInstance($calcKey);

							} @else if get-value("settings", "grid") == "fixed" {

								$outputWidth: (to-number(get-instance-value($calcKey, "output", "width")) / to-number(get-instance-value($calcKey, "span")) * $calcSpan);
								$outputMarginRight: 0;
								$outputMarginLeft: ( if( $calcShift > 0, 
									calc-width($calcKey, $calcShift, to-number(get-instance-value($calcKey, "span"))),
									calc-width($calcKey, $calcShift, to-number(get-instance-value($calcKey, "span")))
								));

								@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
									@content;
								}

								@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
								@include debugPrintInstance($calcKey);

							}
						} @else {
							@warn "You set context to `#{$calcContext}`, but a parent instance could not be found for `#{selector_string()}`";
						}
					} @else {

						$outputWidth: (calc-width($calcKey, $calcSpan, $calcContext));
						$outputMarginRight: 0;
						$outputMarginLeft: ( if( $calcShift > 0, 
							calc-width($calcKey, $calcShift, $calcContext),
							calc-width($calcKey, $calcShift, $calcContext)
						));

						@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
							@content;
						}

						@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
						@include debugPrintInstance($calcKey);
					}
				}
			} @else {
				@if $calcGutter == null or $calcGutter == "normal" or $calcGutter == "default" or $calcGutter == "regular" and get-value("settings", "gutter") != false {
					@if $calcContext == "auto" {
						@if $exists != false {
							@if get-value("settings", "grid") == "fluid" {

								$outputWidth: (calc-width($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")))) - ((calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span"))))*2);
								$outputMarginRight: calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")));
								$outputMarginLeft: calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")));

								@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
									@content;
								}

								@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
								@include debugPrintInstance($calcKey);

							} @else if get-value("settings", "grid") == "fixed" {

								$outputWidth: (to-number(get-instance-value($calcKey, "output", "width")) / to-number(get-instance-value($calcKey, "span")) * $calcSpan) - ((calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span"))))*2);
								$outputMarginRight: calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")));
								$outputMarginLeft: calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")));

								@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
									@content;
								}

								@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
								@include debugPrintInstance($calcKey);

							}
						} @else {
							@warn "You set context to `#{$calcContext}`, but a parent instance could not be found for `#{selector_string()}`";
						}
					} @else {

						$outputWidth: (calc-width($calcKey, $calcSpan, $calcContext)) - ((calc-margin($calcKey, $calcSpan, $calcContext))*2);
						$outputMarginRight: calc-margin($calcKey, $calcSpan, $calcContext);
						$outputMarginLeft: calc-margin($calcKey, $calcSpan, $calcContext);

						@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
							@content;
						}

						@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
						@include debugPrintInstance($calcKey);
					}

				} @else if $calcGutter == "inside" and get-value("settings", "gutter") != false {

					@if $calcContext == "auto" {
						@if $exists != false {
							@if get-value("settings", "grid") == "fluid" {

								$outputWidth: (calc-width($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")))) - ((calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span"))))*4);
								$outputMarginRight: calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")));
								$outputMarginLeft: calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")));

								@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
									@content;
								}

								@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
								@include debugPrintInstance($calcKey);

							} @else if get-value("settings", "grid") == "fixed" {

								$outputWidth: (to-number(get-instance-value($calcKey, "output", "width")) / to-number(get-instance-value($calcKey, "span")) * $calcSpan) - ((calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span"))))*4);
								$outputMarginRight: calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")));
								$outputMarginLeft: calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")));

								@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
									@content;
								}

								@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
								@include debugPrintInstance($calcKey);

							}

						} @else {
							@warn "You set context to `#{$calcContext}`, but a parent instance could not be found for `#{selector_string()}`";
						}
					} @else {

						$outputWidth: (calc-width($calcKey, $calcSpan, $calcContext)) - ((calc-margin($calcKey, $calcSpan, $calcContext))*2);
						$outputMarginRight: calc-margin($calcKey, $calcSpan, $calcContext);
						$outputMarginLeft: calc-margin($calcKey, $calcSpan, $calcContext);

						@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
							@content;
						}

						@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
						@include debugPrintInstance($calcKey);
					}

				} @else if $calcGutter == "alpha" or $calcGutter == "no-left" or $calcGutter == "first" and get-value("settings", "gutter") != false {

					@if $calcContext == "auto" {
						@if $exists != false {
							@if get-value("settings", "grid") == "fluid" {

								$outputWidth: (calc-width($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")))) - (calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span"))));
								$outputMarginRight: calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")));
								$outputMarginLeft: 0;

								@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
									@content;
								}

								@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
								@include debugPrintInstance($calcKey);

							} @else if get-value("settings", "grid") == "fixed" {

								$outputWidth: (to-number(get-instance-value($calcKey, "output", "width")) / to-number(get-instance-value($calcKey, "span")) * $calcSpan) - ((calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")))));
								$outputMarginRight: calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")));
								$outputMarginLeft: 0;

								@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
									@content;
								}

								@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
								@include debugPrintInstance($calcKey);

							}
						} @else {
							@warn "You set context to `#{$calcContext}`, but a parent instance could not be found for `#{selector_string()}`";
						}
					} @else {

						$outputWidth: (calc-width($calcKey, $calcSpan, $calcContext)) - (calc-margin($calcKey, $calcSpan, $calcContext));
						$outputMarginRight: calc-margin($calcKey, $calcSpan, $calcContext);
						$outputMarginLeft: 0;

						@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
							@content;
						}

						@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
						@include debugPrintInstance($calcKey);
					}

				} @else if $calcGutter == "omega" or $calcGutter =="no-right" or $calcGutter == "last" and get-value("settings", "gutter") != false {

					@if $calcContext == "auto" {
						@if $exists != false {
							@if get-value("settings", "grid") == "fluid" {

								$outputWidth: (calc-width($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")))) - (calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span"))));
								$outputMarginRight: 0;
								$outputMarginLeft: calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")));

								@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
									@content;
								}

								@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
								@include debugPrintInstance($calcKey);

							} @else if get-value("settings", "grid") == "fixed" {

								$outputWidth: (to-number(get-instance-value($calcKey, "output", "width")) / to-number(get-instance-value($calcKey, "span")) * $calcSpan) - ((calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")))));
								$outputMarginRight: 0;
								$outputMarginLeft: calc-margin($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")));

								@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
									@content;
								}

								@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
								@include debugPrintInstance($calcKey);

							}
						} @else {
							@warn "You set context to `#{$calcContext}`, but a parent instance could not be found for `#{selector_string()}`";
						}
					} @else {

						$outputWidth: (calc-width($calcKey, $calcSpan, $calcContext)) - (calc-margin($calcKey, $calcSpan, $calcContext));
						$outputMarginRight: 0;
						$outputMarginLeft: calc-margin($calcKey, $calcSpan, $calcContext);

						@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
							@content;
						}

						@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
						@include debugPrintInstance($calcKey);
					}

				} @else if $calcGutter == "row" or $calcGutter == "none" or get-value("settings", "gutter") == false {

					@if $calcContext == "auto" {
						@if $exists != false {
							@if get-value("settings", "grid") == "fluid" {

								$outputWidth: calc-width($calcKey, $calcSpan, to-number(get-instance-value($calcKey, "span")));
								$outputMarginRight: 0;
								$outputMarginLeft: 0;

								@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
									@content;
								}

								@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
								@include debugPrintInstance($calcKey);

							} @else if get-value("settings", "grid") == "fixed" {

								$outputWidth: (to-number(get-instance-value($calcKey, "output", "width")) / to-number(get-instance-value($calcKey, "span")) * $calcSpan);
								$outputMarginRight: 0;
								$outputMarginLeft: 0;

								@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
									@content;
								}

								@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
								@include debugPrintInstance($calcKey);

							}
						} @else {
							@warn "You set context to `#{$calcContext}`, but a parent instance could not be found for `#{selector_string()}`";
						}
					} @else {

						$outputWidth: calc-width($calcKey, $calcSpan, $calcContext);
						$outputMarginRight: 0;
						$outputMarginLeft: 0;

						@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
							@content;
						}

						@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
						@include debugPrintInstance($calcKey);
					}
				}
			}

		} @else {

			@if $calcGutter == null or $calcGutter == "normal" or $calcGutter == "default" or $calcGutter == "regular" and get-value("settings", "gutter") != false {

				$outputWidth: (calc-width($calcKey, $calcSpan)) - ((calc-margin($calcKey, $calcSpan))*2);
				$outputMarginRight: calc-margin($calcKey, $calcSpan);
				$outputMarginLeft: calc-margin($calcKey, $calcSpan);

				@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
					@content;
				}

				@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
				@include debugPrintInstance($calcKey);

			} @else if $calcGutter == "inside" and get-value("settings", "gutter") != false {

				$outputWidth: (calc-width($calcKey, $calcSpan)) - ((calc-margin($calcKey, $calcSpan))*4);
				$outputMarginRight: calc-margin($calcKey, $calcSpan);
				$outputMarginLeft: calc-margin($calcKey, $calcSpan);

				@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
					@content;
				}

				@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
				@include debugPrintInstance($calcKey);

			} @else if $calcGutter == "alpha" or $calcGutter == "no-left" or $calcGutter == "first" and get-value("settings", "gutter") != false {

				$outputWidth: (calc-width($calcKey, $calcSpan)) - (calc-margin($calcKey, $calcSpan));
				$outputMarginRight: calc-margin($calcKey, $calcSpan);
				$outputMarginLeft: 0;

				@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
					@content;
				}

				@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
				@include debugPrintInstance($calcKey);

			} @else if $calcGutter == "omega" or $calcGutter == "no-right" or $calcGutter == "last" and get-value("settings", "gutter") != false {

				$outputWidth: (calc-width($calcKey, $calcSpan)) - (calc-margin($calcKey, $calcSpan));
				$outputMarginRight: 0;
				$outputMarginLeft: calc-margin($calcKey, $calcSpan);

				@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
					@content;
				}

				@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
				@include debugPrintInstance($calcKey);

			} @else if $calcGutter == "row" or $calcGutter == "none" or get-value("settings", "gutter") == false {

				$outputWidth: calc-width($calcKey, $calcSpan);
				$outputMarginRight: 0;
				$outputMarginLeft: 0;

				@include outputFlint($outputWidth, $outputMarginRight, $outputMarginLeft) {
					@content;
				}

				@include newInstance($calcKey, $calcSpan, $calcContext, $calcGutter, $calcShift, $outputWidth, $outputMarginRight, $outputMarginLeft);
				@include debugPrintInstance($calcKey);

			}
		}
	}
}